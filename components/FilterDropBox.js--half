import React, { useState } from 'react';
import { useSelector } from 'react-redux';

export default function FilterDropBox({ open = +false , title, children, filter_options }) {

  const [isOpen, setOpen] = useState(open), handleOpen = () => { isOpen? setOpen(+false): setOpen(+true); };

  const filter_collection = useSelector(state => state.cars.filter);
  // console.log({filter_collection});
  console.log({filter_options});

  const [showMoreFlag, setShowMore] = useState([]);

  const handleShowMore = (target) => {
    let show_more = [];
    if(showMoreFlag.includes(target)) {
      show_more.splice(show_more.indexOf(target), 1);
    }else {
      show_more.push(target);
    }
    setShowMore(show_more);
  }
  
  // return <p>test</p>;

  return children? (
        <div className="filter-drop-option-box " >
          <div className="filter-drop-option-header">
            <p>{title}</p>
            <div className="filter-drop-option-arrow" onClick={handleOpen}>
              <svg width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M0.58782 0.745553C0.912214 0.42116 1.43807 0.420873 1.76282 0.744913L4.65262 3.62841C4.84459 3.81997 5.15541 3.81997 5.34738 3.62841L8.23718 0.744914C8.56193 0.420874 9.08779 0.42116 9.41218 0.745553C9.73682 1.0702 9.73682 1.59655 9.41218 1.92119L5.83333 5.50004C5.3731 5.96028 4.6269 5.96028 4.16667 5.50004L0.58782 1.92119C0.263176 1.59655 0.263176 1.0702 0.58782 0.745553Z" fill="#28293D"/>
              </svg>
            </div>
          </div>
          {children}
          {/* {filter_options.map(filter_option => {
            return (
            <div className={`filter-drop-option-content ${isOpen? "max-h-[2000px] pt-[18px]": "max-h-[0px] pt-[0]"}`} key={filter_option}>
              <div className="chk-options-group">
                <div className="options-group-title" >
                  <p>Exterior color</p>
                </div>
                {Object.keys(filter_collection[filter_option]).splice(0, 5).map((m) => (
                  <div className="chkbox-field" key={m}>
                    <input id={`${m}_chk`} type="checkbox" className='filter-checkbox' value={m}
                      checked={filter_collection[filter_option].includes(m)}
                      onChange={handleFilterExteriorColorChange}
                    />
                    <label htmlFor={`${m}_chk`} >{m} ({filter_collection[filter_option][m]})</label>
                  </div>
                ))}
                {showMoreFlag.includes(filter_option) && Object.keys(filter_collection[filter_option]).splice(5).map((m) => (
                  <div className="chkbox-field" key={m}>
                    <input id={`${m}_chk`} type="checkbox" className='filter-checkbox' value={m}
                      checked={filter_collection[filter_option].includes(m)}
                      onChange={handleFilterExteriorColorChange}
                    />
                    <label htmlFor={`${m}_chk`} >{m} ({filter_collection[filter_option][m]})</label>
                  </div>
                ))}
                {Object.keys(filter_collection[filter_option]).length > 5 &&
                  <p className="show-more-link" onClick={() => handleShowMore(filter_option)} >
                    <span>{ showMoreFlag.includes(filter_option) ? "Show more" : "Show less" }</span>
                    <svg width="10" height="6" viewBox="0 0 10 6" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M0.58782 0.745492C0.912214 0.421099 1.43807 0.420812 1.76282 0.744852L4.65262 3.62835C4.84459 3.81991 5.15541 3.81991 5.34738 3.62835L8.23718 0.744853C8.56193 0.420813 9.08779 0.421099 9.41218 0.745492C9.73682 1.07014 9.73682 1.59649 9.41218 1.92113L5.83333 5.49998C5.3731 5.96022 4.6269 5.96022 4.16667 5.49998L0.58782 1.92113C0.263176 1.59649 0.263176 1.07014 0.58782 0.745492Z" fill="#FF8800"/>
                    </svg>
                  </p>
                }
              </div>
            </div>
          )})} */}
        </div>
  ) : null;
}
